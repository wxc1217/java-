分支

分支要求：
1、获取当前分支：（及显示当前所有分支的文件名）
    将所有分支文件存放在专门的文件夹，每次通过遍历该文件夹显示当前分支。
2、显示每个分支的最新commit id
    每个分支文件内容为当前的最新commit id，如果更新了提交，直接更改该分支文件的内容。
3、显示当前分支：
    通过名为head的文件实现head指针功能，该文件保存当前分支的文件名，当切换分支时，直接更改head文件内容。

分支-Branch类设计：
public class Branch{
    数据域：
    Private Commit lastcommit;
    Private String branchname;
    Private String branchaddress；
    ......
    
    方法域：
    //构造方法
    Branch(String branchname, Commit lastcommit){
        将输入的文件名复制给当前文件名，更新最后一次commit；
        若此次无commit，Branch中的commit可暂时为空；
    }

    //Branch存储方法
    branchsave(){
        在地址branchaddress的位置创建名为branchname的文件，文件内容为lastcommit；
    }

    //所有Branch显示方法
    branchseek(){
        遍历branch文件夹，显示其中所有文件名，及为当前所有分支；
    }

    //当前Branch显示方法
    branchcheck(){
        打开head文件，显示head文件内容，即为当前分支名；
    }

    //Branch交换方法
    branchchange(String branchname){
        在分支文件夹里查询是否存在名为branchname文件：
            若存在，更新head文件；
            若不存在，显示给用户，或直接新建一个分支，储存并交换；
    }
}
